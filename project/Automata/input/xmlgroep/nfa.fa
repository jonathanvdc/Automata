++ Finite automaton input file ++
This file uses an XML-like syntax to describe an automaton (only on automaton per file)
Any text that is not between recognized tags is ignored. the recognized tags are:

TYPE: should contain one of: dfa, nfa or enfa
STATES: a comma separated list of strings. commas and lesser than symbols in a string need to be escaped with a backslash
SYMBOLS: separated by a comma. epsilon can be represented by \0, a comma or lesser than symbol needs to be escaped with a backslash. 
The symbols list can also be written without comma's.
STARTSTATE: should contain a string representing the start state that is also present in the list of states. lesser than symbols in the string should be escaped with a backslash.
ACCEPTSTATES: a comma separated list of strings representing accept states. These should also be present in the list of states. A comma or lesser than symbol needs to be escaped with a backslash. 
TRANSITIONFUNCTION: contains T tags for individual transitions
T: contains a triplet of a string, a character and a string, separated by comma's. These represent respectively the origin state, the symbol and the resulting state. A comma or lesser than symbol needs to be escaped with a backslash.

If redundant tags are present only the first one will be used.

<TYPE>nfa</TYPE>
<STATES>q0,q1,q2</STATES>
<SYMBOLS>0,1</SYMBOLS>
<STARTSTATE>q0</STARTSTATE>
<ACCEPTSTATES>q2</ACCEPTSTATES>
<TRANSITIONFUNCTION>
<T>q0,0,q0</T>
<T>q0,1,q0</T>
<T>q0,0,q1</T>
<T>q1,1,q2</T>
</TRANSITIONFUNCTION>
